--- 1  
CREATE OR REPLACE FUNCTION Get_Emp_Name(n NUMBER)
    RETURN varchar
    IS full_name varchar(250);
BEGIN

    SELECT concat(concat(NOM, ' '), PRENOM) INTO full_name FROM EMPLOYE
    WHERE NUMERO = n;
    RETURN (full_name);

END;
/
 
--- 2  
CREATE OR REPLACE PROCEDURE Get_RAYON(n NUMBER)
AS
    CURSOR CUR1 IS
    SELECT NOM, CHIFFREAFFAIRE, NUMERORESPONSABLE FROM RAYON
    WHERE NUMEROHYPER = n
    ORDER BY CHIFFREAFFAIRE DESC FETCH NEXT 3 ROWS ONLY;
     ENREGISTREMENT_CUR1 CUR1%ROWTYPE;
BEGIN

    OPEN CUR1;
    LOOP
        FETCH CUR1 INTO  ENREGISTREMENT_CUR1;
        EXIT WHEN CUR1%NOTFOUND;
        dbms_output.put_line('_____________________');
        dbms_output.put_line('NOM_RAYON : ' ||  ENREGISTREMENT_CUR1.NOM);
        dbms_output.put_line('CHIFFREAFFAIRE : ' ||  ENREGISTREMENT_CUR1.CHIFFREAFFAIRE);
        dbms_output.put_line('NOM_RESPONSABLE : ' || Get_Emp_Name( ENREGISTREMENT_CUR1.NUMERORESPONSABLE));
    END LOOP;

END;
/


--- 3  
CREATE OR REPLACE PROCEDURE Produit_Vendu(NUMEROPRODUIT NUMBER, QUANTITEPRODUIT NUMBER) IS
BEGIN

    UPDATE RAYON SET CHIFFREAFFAIRE =
    (SELECT CHIFFREAFFAIRE FROM RAYON WHERE NUMERO =
    (SELECT NUMERORAYON FROM PRODUITS WHERE NUMERO = NUMEROPRODUIT)) + ((SELECT PRIXUNITAIRE FROM PRODUITS WHERE NUMERO = NUMEROPRODUIT) * QUANTITEPRODUIT)
    WHERE NUMERO = (SELECT NUMERORAYON FROM PRODUITS WHERE NUMERO = NUMEROPRODUIT AND QUANTITESTOCKHYPER - QUANTITEPRODUIT > 0);

    UPDATE PRODUITS SET QUANTITESTOCKHYPER = QUANTITESTOCKHYPER - QUANTITEPRODUIT
    WHERE NUMERO = NUMEROPRODUIT AND QUANTITESTOCKHYPER > QUANTITEPRODUIT;
END;
/

--- 4  
-- attention si numeroemploye est deja le nom du int dans la table employe 
CREATE TABLE PRIMES
(
	NUMERO INT GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    CONSTRAINT pk_primes PRIMARY KEY (NUMERO),
	NUMEROEMPLOYE INT,
    CONSTRAINT fk_primeNUMEROEMPLOYE FOREIGN KEY (NUMEROEMPLOYE) REFERENCES EMPLOYE(NUMERO),
	NUMERORAYON INT,
    CONSTRAINT fk_primeNUMERORAYON FOREIGN KEY (NUMERORAYON) REFERENCES RAYON(NUMERO),
    PRIME INT,
    DATEE VARCHAR(100)
);

CREATE OR REPLACE PROCEDURE Prime_Employe(P1 NUMBER, P2 NUMBER, P3 NUMBER)
AS
    CURSOR CUR2 IS
    SELECT NUMERO, NUMERORESPONSABLE, CHIFFREAFFAIRE FROM RAYON
    ORDER BY CHIFFREAFFAIRE DESC FETCH NEXT 3 ROWS ONLY;
    ENREGISTREMENT_CUR2 CUR2%ROWTYPE;
    i INT;
BEGIN

    i := 1;

    OPEN CUR2;
    LOOP
        FETCH CUR2 INTO ENREGISTREMENT_CUR2;
        EXIT WHEN CUR2%NOTFOUND;
        dbms_output.put_line('PRIME POUR: ' || ENREGISTREMENT_CUR2.NUMERORESPONSABLE);
        IF i = '1' THEN
            INSERT INTO PRIMES(NUMEROEMPLOYE, NUMERORAYON, PRIME, DATEE) VALUES
            ((ENREGISTREMENT_CUR2.NUMERORESPONSABLE), (ENREGISTREMENT_CUR2.NUMERO), (P1), (SELECT CURRENT_DATE FROM DUAL));
        END IF;
        IF i = '2' THEN
            INSERT INTO PRIMES(NUMEROEMPLOYE, NUMERORAYON, PRIME, DATEE) VALUES
            ((ENREGISTREMENT_CUR2.NUMERORESPONSABLE), (ENREGISTREMENT_CUR2.NUMERO), (P2), (SELECT CURRENT_DATE FROM DUAL));
        END IF;
        IF i = '3' THEN
            INSERT INTO PRIMES(NUMEROEMPLOYE, NUMERORAYON, PRIME, DATEE) VALUES
            ((ENREGISTREMENT_CUR2.NUMERORESPONSABLE), (ENREGISTREMENT_CUR2.NUMERO), (P3), (SELECT CURRENT_DATE FROM DUAL));
        END IF;
        i := i + 1;
    END LOOP;
END;
/

CREATE OR REPLACE PROCEDURE Prime_Employe_Case(P1 NUMBER, P2 NUMBER, P3 NUMBER)
AS
    CURSOR CUR2 IS
    SELECT NUMERO, NUMERORESPONSABLE, CHIFFREAFFAIRE FROM RAYON
    ORDER BY CHIFFREAFFAIRE DESC FETCH NEXT 3 ROWS ONLY;
    ENREGISTREMENT_CUR2 CUR2%ROWTYPE;
    i INT;
BEGIN

    i := 1;

    OPEN CUR2;
    LOOP
    CASE i
        FETCH CUR2 INTO ENREGISTREMENT_CUR2;
        EXIT WHEN CUR2%NOTFOUND;
        dbms_output.put_line('PRIME POUR: ' || ENREGISTREMENT_CUR2.NUMERORESPONSABLE);
        WHEN i = '1' THEN
            INSERT INTO PRIMES(NUMEROEMPLOYE, NUMERORAYON, PRIME, DATEE) VALUES
            ((ENREGISTREMENT_CUR2.NUMERORESPONSABLE), (ENREGISTREMENT_CUR2.NUMERO), (P1), (SELECT CURRENT_DATE FROM DUAL));
        WHEN i = '2' THEN
            INSERT INTO PRIMES(NUMEROEMPLOYE, NUMERORAYON, PRIME, DATEE) VALUES
            ((ENREGISTREMENT_CUR2.NUMERORESPONSABLE), (ENREGISTREMENT_CUR2.NUMERO), (P2), (SELECT CURRENT_DATE FROM DUAL));
        WHEN i = '3' THEN
            INSERT INTO PRIMES(NUMEROEMPLOYE, NUMERORAYON, PRIME, DATEE) VALUES
            ((ENREGISTREMENT_CUR2.NUMERORESPONSABLE), (ENREGISTREMENT_CUR2.NUMERO), (P3), (SELECT CURRENT_DATE FROM DUAL));
        i := i + 1;
    END LOOP;
END;
/

--- 5  
-- pas reussi a la faire 
